<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}bmr{% endblock %}</title>
    {% block stylesheets %}{% endblock %}
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <style>
        @import '/css/flash.css';
        @import '/css/nav.css';
        header {
            text-align: right;
            border-bottom: 0.5rem solid black; padding: 1rem;
        }
    </style>
</head>
<body>
<header>
    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
        Username:
        <strong>{{ app.user.username }}</strong>
        <br>
        <a href="{{ url('app_logout') }}">logout</a>
    {% else %}
        <a href="{{ url('app_login') }}">login</a>
    {% endif %}
</header>
<nav class="navbar navbar-expand-lg navbar-dark navbar-bg mb-5">
    <a style="margin-left: 0.1rem;" class="navbar-brand space-brand" href="#">
        Fitness app
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav ml-auto">
            {% if is_granted('ROLE_ADMIN') %}
                <li>
                    <a href="{{ url('admin') }}">admin home</a>
                </li>
            {% endif %}
            <li class="nav-item">
                <a class="nav-link"  href="{{ url('team') }}">
                    team
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link"  href="{{ url('timetable') }}">
                    timetable
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link"  href="{{ url('player') }}">
                    player
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link"  href="{{ url('hompage') }}">
                    hompage
                </a>
            </li>
        </ul>
    </div>
</nav>
<div class="wrapper">
    <h2 class="heading">BMR + Macro calculator</h2>
<style>
    body {
        padding: 10px;
        backgorund-color: #f2f2f2;
    }

    .heading {
        text-align: center;
        font-family: Arial, Helvetica, sans-serif;
        margin: 0 0 10px 0;
    }

    .wrapper {
        border-radius: 4px;
        max-width: 350px;
        width: 100%;
        padding: 15px;
        margin: 20px auto;
        box-sizing: border-box;
        box-shadow: 0 0 5px 0 rgba(0, 0, 0, .15);
        color: #1c1c1c;
    }

    .input-group {
        margin-bottom: 10px;
    }

    .label {
        display: block;
        font-family: Arial, Helvetica, sans-serif;
        font-size: .9em;
        margin-bottom: 3px;
    }

    .input {
        font-family: Arial, Helvetica, sans-serif;
        padding: 5px;
        box-sizing: border-box;
        width: 100%;
    }

    .invalid {
        border: 1px solid red;
        background-color: rgba(255, 0, 0, .1);
    }

    .info {
        display: block;
        color: tomato;
        font-family: Arial, Helvetica, sans-serif;
        font-size: .7em;
    }

    .button {
        width: 100%;
        padding: 10px 0;
        border: none;
        text-transform: uppercase;
        font-weight: bold;
        cursor: pointer;
        transition: background-color .3s ease;
    }
    .button:hover {
        background-color: lightgrey;
    }

    .output {
        margin-top: 10px;
        font-family: Arial, Helvetica, sans-serif;
        font-size: .9em;
    }

    .d-block {
        display: block;
    }

    .hidden {
        display: none;
    }

    .formula-info {
        display: block;
        font-family: Arial, Helvetica, sans-serif;
        font-size: .7em;
        margin-top: 5px;
        font-weight: bold;
        text-align: center;
    }
</style>
    <form>
        <div class="input-group">
            <label for="gender-input" class="label">Gender</label>
            <select id="gender-input" class="input" value="female">
                <option value="female">Female</option>
                <option value="male">Male</option>
            </select>
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="weight-input" class="label">Weight</label>
            <input id="weight-input" type="number" class="input" min="0" placeholder="kg">
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="height-input" class="label">Height</label>
            <input id="height-input" type="number" class="input" placeholder="cm">
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="age-input" class="label">Age</label>
            <input id="age-input" type="number" class="input" min="0" placeholder="years">
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="ratio-input" class="label">Activity ratio</label>
            <select id="ratio-input" class="input" value="1.2">
                <option value="1.2">Small or no activity</option>
                <option value="1.375">Moderate activity (1 - 3 trainings per week)</option>
                <option value="1.55">Average activity (3 - 5 trainings per week)</option>
                <option value="1.725">High activity (7 trainings per week)</option>
                <option value="1.9">High activity and manual labour</option>
            </select>
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="proteins-input" class="label">Proteins</label>
            <input id="proteins-input" type="number" class="input" min="1.8" max="2" placeholder="1.8g - 2g">
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="fat-input" class="label">Fat</label>
            <input id="fat-input" type="number" class="input" min="20" max="30" placeholder="20% - 30%">
            <span class="info"></span>
        </div>

        <div class="input-group">
            <label for="surplus-input" class="label">Calorie surplus</label>
            <input id="surplus-input" type="number" class="input" placeholder="kcal">
            <span class="info"></span>
        </div>

        <button id="submit" class="button">Submit</button>
    </form>

    <div id="output" class="output hidden">
        <span class="d-block">BMR: <span id="bmr-output">0</span>kcal</span>
        <hr>
        <span class="d-block">Proteins: <span id="proteins-output">0</span>g</span>
        <span class="d-block">Carbs: <span id="carbs-output">0</span>g</span>
        <span class="d-block">Fat: <span id="fat-output">0</span>g</span>
    </div>

    <span class="formula-info">Uses Mifflin-St Jeor formula</span>
</div>
<script>
    (() => {
        const bmrFormula = (gender, kg, cm, age, ratio) => ~~((((10 * kg) + (6.25 * cm) - (5 * age) + 5) * ratio) + ((gender === 'female') ? -161 : 5));

        const DOM = {
            input: {
                gender: document.getElementById('gender-input'),
                weight: document.getElementById('weight-input'),
                height: document.getElementById('height-input'),
                age: document.getElementById('age-input'),
                ratio: document.getElementById('ratio-input'),
                proteins: document.getElementById('proteins-input'),
                fat: document.getElementById('fat-input'),
                surplus: document.getElementById('surplus-input'),
            },
            outputValue: {
                bmr: document.getElementById('bmr-output'),
                proteins: document.getElementById('proteins-output'),
                carbs: document.getElementById('carbs-output'),
                fat: document.getElementById('fat-output')
            },
            output: document.getElementById('output'),
            submit: document.getElementById('submit'),
            info: document.querySelectorAll('.info')
        };

        function validateForm () {
            const rules = {
                gender: {
                    required: true
                },
                weight: {
                    required: true,
                    minValue: 0
                },
                height: {
                    required: true,
                    minValue: 0
                },
                age: {
                    required: true,
                    minValue: 0
                },
                ratio: {
                    required: true,
                    minValue: 1.2,
                    maxValue: 1.9
                },
                proteins: {
                    required: true,
                    minValue: 1.8,
                    maxValue: 2
                },
                fat: {
                    required: true,
                    minValue: 20,
                    maxValue: 30
                },
                surplus: {
                    minValue: -1000,
                    maxValue: 1000
                }
            };

            let isFormValid = true;
            let index = 0;
            let value;
            let valid;
            let info;
            for (const key in rules) {
                valid = true;
                info = '';
                value = DOM.input[key].value;

                for (const rule in rules[key]) {
                    if (!valid) {
                        break;
                    }

                    if (rule === 'required') {
                        valid = value.length !== 0 && valid;
                        if (!valid) {
                            info = 'This field is required.';
                        }
                    }

                    if (rule === 'minValue') {
                        if (!value.length) {
                            value = 0;
                        }

                        valid = parseFloat(value) >= parseFloat(rules[key][rule]) && valid;
                        if (!valid) {
                            info = `This value should be greater/equal ${rules[key][rule]}.`;
                        }
                    }

                    if (rule === 'maxValue') {
                        if (!value.length) {
                            value = 0;
                        }

                        valid = parseFloat(value) <= parseFloat(rules[key][rule]) && valid;
                        if (!valid) {
                            info = `This value should be less/equal ${rules[key][rule]}.`;
                        }
                    }
                }

                isFormValid = valid && isFormValid;
                (!valid) ? DOM.input[key].classList.add('invalid') : DOM.input[key].classList.remove('invalid');
                DOM.info[index].textContent = info;

                index++;
            }

            return isFormValid;
        }

        function getFormData () {
            const data = {};
            let floatValue;

            for (const key in DOM.input) {
                floatValue = parseFloat(DOM.input[key].value);
                data[key] = (!isNaN(floatValue)) ? floatValue : DOM.input[key].value;
            }

            return data;
        }

        function outputData (data) {
            for (const key in data) {
                DOM.outputValue[key].textContent = data[key];
            }
        }

        function handleSubmit (event) {
            event.preventDefault();
            const isFormValid = validateForm();
            if (isFormValid) {
                const formData = getFormData();
                console.log(formData);
                const bmr = bmrFormula(
                    formData.gender,
                    formData.weight,
                    formData.height,
                    formData.age,
                    formData.ratio
                ) + formData.surplus;
                const proteins = ~~(formData.proteins * formData.weight);
                const fat = ~~((bmr * (formData.fat / 100)) / 9);
                const carbs = ~~((bmr - ((proteins * 4) + (fat * 9))) / 4);
                const output = { bmr, proteins, carbs, fat };

                outputData(output);
                DOM.output.classList.remove('hidden');
            }
        }

        DOM.submit.addEventListener('click', handleSubmit);
    })();
</script>
{% block javascripts %}{% endblock %}
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
</body>
</html>